DATA MODELS — MUSSON BLOG
==========================

1. ABSTRACT BASE MODEL
-----------------------
Название: BaseModel
Описание: Базовая абстрактная модель, от которой наследуются все основные модели.

Поля:
- created_at: DateTimeField (auto_now_add=True) — дата создания записи
- updated_at: DateTimeField (auto_now=True) — дата последнего изменения

Используется для соблюдения DRY-принципа и централизации мета-полей.


2. MODEL: Post
--------------
Модель, описывающая публикации (посты) в блоге. Является центральной сущностью проекта.
Наследуется от: BaseModel

Поля:
- id: AutoField (primary key)
- title: CharField — заголовок поста
- slug: SlugField — URL-дружественная строка, уникальная, генерируется автоматически из title, но может быть отредактирована в админке
- body: JSONField — структурированное содержимое поста. Содержит список блоков следующего вида:
  • heading: Заголовок (H2/H3)
  • paragraph: Текст параграфа
  • image: Вставка изображения (WEBP)
  • quote: Выделенная цитата
  • code: Блок с форматированным кодом
  • gallery: Несколько изображений (список WEBP-ссылок)
  • video: Встраиваемое видео (YouTube)
  • link: Внешняя или внутренняя ссылка с текстом
- cover_image: ImageField (upload_to='posts/covers/') — обложка поста. Все изображения только в формате WEBP. Оригиналы не хранятся.
- published_at: DateTimeField — дата и время публикации
- is_published: BooleanField — отображать ли пост на сайте
- tags: ManyToManyField (к Tag) — связь с тегами
- seo_title: CharField (опционально) — кастомный <title>
- search_description: TextField (опционально) — мета-описание

Особенности:
- Слаг генерируется автоматически через translit + slugify, но допускается ручное редактирование.
- Поле body — структурировано, чтобы поддерживать расширяемость и гибкость (аналог Wagtail StreamField).
- Поддерживаются только изображения в формате WEBP — как в обложке, так и внутри контента.
- Контентные блоки редактируются через JSON-поле. В будущем планируется визуальный редактор (на базе django-admin-json-editor или собственного решения).


3. MODEL: Tag
-------------
Модель, описывающая теги для постов. Используются как навигационная и структурная единица (вместо категорий).
Наследуется от: BaseModel

Поля:
- id: AutoField (primary key)
- name: CharField — человекочитаемое название тега
- slug: SlugField — URL-дружественная строка для использования в адресах, уникальна

Особенности:
- Слаг генерируется автоматически из name
- Один тег может быть связан с множеством постов (ManyToMany)


4. MODEL: Rating
----------------
Модель, описывающая пользовательскую оценку поста от 1 до 5.
Наследуется от: BaseModel

Поля:
- id: AutoField (primary key)
- post: ForeignKey (к Post, on_delete=CASCADE)
- value: IntegerField (1–5)
- uid_hash: CharField — идентификатор пользователя (по IP/UserAgent/hash куки)

Особенности:
- Один пользователь может проголосовать за один пост только один раз (уникальность по post + uid_hash)
- Дата оценки не хранится (не требуется)


5. MODEL: ShortLink
-------------------
Модель, создающая короткую ссылку на пост вида /s/<id>.
Наследуется от: BaseModel

Поля:
- id: AutoField (primary key)
- code: CharField — короткий уникальный код (например, 6-символьный base62)
- post: OneToOneField (к Post, on_delete=CASCADE)

Особенности:
- Одна короткая ссылка на один пост
- Короткая ссылка живёт столько же, сколько и пост


=== END OF DATA MODELS ===

