DATA_MODELS_DETAIL.txt ‚Äî MUSSON BLOG
–î–æ–∫—É–º–µ–Ω—Ç –æ–ø–∏—Å—ã–≤–∞–µ—Ç –¥–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö –±–ª–æ–≥–∞ MUSSON: –ø–æ–ª—è, —Ç–∏–ø—ã, —Å–≤—è–∑–∏, –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è. –í—Å–µ –º–æ–¥–µ–ª–∏ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã —á–µ—Ä–µ–∑ Django ORM, –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ PostgreSQL.

üìÑ Post
class Post(models.Model):
    title = models.CharField(max_length=200)
    slug = models.SlugField(unique=True, editable=True)
    description = models.TextField(blank=True)
    body = models.JSONField()  # StreamField-like JSON
    image = models.ImageField(upload_to="posts/", null=True, blank=True)
    tags = models.ManyToManyField("Tag", related_name="posts")
    first_published_at = models.DateTimeField()
    is_published = models.BooleanField(default=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    class Meta:
        ordering = ["-first_published_at"]
        indexes = [models.Index(fields=["slug"])]

    def get_absolute_url(self):
        return f"/posts/{self.slug}/"

üè∑Ô∏è Tag
class Tag(models.Model):
    name = models.CharField(max_length=64, unique=True)
    slug = models.SlugField(unique=True)

    def __str__(self):
        return self.name

‚≠ê Rating
class Rating(models.Model):
    post = models.ForeignKey(Post, on_delete=models.CASCADE, related_name="ratings")
    score = models.PositiveSmallIntegerField(validators=[MinValueValidator(1), MaxValueValidator(5)])
    user_hash = models.CharField(max_length=64)  # IP+UserAgent hash
    created_at = models.DateTimeField(auto_now_add=True)

    class Meta:
        unique_together = ("post", "user_hash")

üîó ShortLink
class ShortLink(models.Model):
    post = models.ForeignKey(Post, on_delete=models.CASCADE, related_name="shortlinks")
    code = models.CharField(max_length=12, unique=True)

    def get_redirect_url(self):
        return self.post.get_absolute_url()

üìà AnalyticsEvent
class AnalyticsEvent(models.Model):
    path = models.CharField(max_length=255)
    ip = models.GenericIPAddressField()
    user_agent = models.TextField()
    referrer = models.URLField(blank=True, null=True)
    created_at = models.DateTimeField(auto_now_add=True)

üì¨ ContactMessage
class ContactMessage(models.Model):
    name = models.CharField(max_length=100)
    email = models.EmailField()
    message = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)

üîß –ë–∞–∑–æ–≤–∞—è –º–æ–¥–µ–ª—å (DRY)
class AbstractBaseModel(models.Model):
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    class Meta:
        abstract = True
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ Post, Tag, AnalyticsEvent, ContactMessage —á–µ—Ä–µ–∑ –Ω–∞—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∏–ª–∏ mixin.

–î–æ–∫—É–º–µ–Ω—Ç –∑–∞–≤–µ—Ä—à—ë–Ω. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ –æ–ø–∏—Å–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π —Å—Ö–µ–º—ã –º–æ–¥–µ–ª–µ–π Django + PostgreSQL –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞ MUSSON.
