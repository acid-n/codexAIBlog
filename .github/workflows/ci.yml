name: CI Build & Lint

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports: [5432:5432]
        env:
          POSTGRES_DB: test_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          pip install -r backend/requirements.txt

      - name: Install test dependencies
        run: |
          pip install pytest pytest-django pytest-cov

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('frontend/package-lock.json') }}

      - name: Install frontend dependencies
        run: npm ci --prefix frontend

      - name: Verify TypeScript packages
        run: |
          cd frontend
          npx tsc --version
          npx eslint --version

      - name: Build frontend
        run: npm run build --prefix frontend

      - name: Run backend tests
        run: |
          pytest --cov=backend/blog -q

      - name: Run frontend tests
        run: npm run test:ci --prefix frontend

      - name: Build Docker images
        run: |
          docker compose -f infra/docker-compose.yml build
